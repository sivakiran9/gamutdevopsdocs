Chef project end to end

1. create one project in chef server and same project create in local workstation in that create three directories like .chef cookbooks and roles
2. in .chef dirctory copy the knife.rb file and projectname.pem file
3. in cookbook folder we need generate the cookbook for project using 
Creating Cookbooks:
====================
# Create a cookbook called 'nginx' in cookbooks directory
1. $ chef generate cookbook nginx

#
2. cd cookbooks/nginx

3. cd recipes; vim default.rb (write a recipe)
Recipe code:
-------------
execute "run apt-get update command" do
  command "apt-get update"
end
package 'nginx' do
  action :install
end
execute 'staring nginx server' do
  command 'service nginx start'
end

package 'nginx' do
  action :purge
end

package 'nginx-common' do
  action :purge
end

#
4. in roles dirctory  we write the app.json file or web.json
#

4. Place our application code in below directory for deployment
	cd cookbooks/nginx/files/default
	vim index.html
index.html code:
------------
<html>
   <body>
     <h1 style="color:red;">Gamutkart Online Training Portal</h1>
</body> 
</html>


5. upload the cookbooks	
    knife cookbook upload nginx

- The bootstrap process connects workstation to your node over SSH.

knife bootstrap 172.17.0.2 --ssh-user sai --ssh-password 'sai' --sudo --use-sudo-password --node-name chfserver --run-list 'recipe[learn_chef_apache2]'======this old method========

knife bootstrap 172.17.0.2 --ssh-user sai --ssh-password 'sai' --sudo --use-sudo-password --node-name chfserver	
#
Upload Roles to chef server:
$ knife role from file roles/web.json
$  knife role from file roles/app.json
#
Set run-list to our node / Set Role to our node / Attache the node to role
$ knife node run_list set chefserver1 "role[web]" --> Add the node to a Role
$ knife node run_list set chefserver2 "role[app]"
#
Login to the node and initialte "chef-run" manually.
$ sudo chef-client
